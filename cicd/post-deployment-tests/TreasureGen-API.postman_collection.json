{
	"info": {
		"_postman_id": "6b335612-f506-478f-a7ea-3d272ae7768d",
		"name": "TreasureGen API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28758235"
	},
	"item": [
		{
			"name": "V1",
			"item": [
				{
					"name": "Validate Treasure",
					"item": [
						{
							"name": "Validate Level 1 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 20 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 20 Coin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "coin"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 20 Goods",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "goods"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 20 Items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "items"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 20 Invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "invalid"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 0 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 100 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "100"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 101 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(pm.response.json()).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "101"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Generate Treasure",
					"item": [
						{
							"name": "Generate Level 1 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns generated treasure\", function () {\r",
											"    var treasure = pm.response.json();\r",
											"    pm.expect(treasure.isAny).to.be.oneOf([true, false]);\r",
											"    pm.expect(treasure.coin).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.not.be.null;\r",
											"    pm.expect(treasure.items).to.not.be.null;\r",
											"\r",
											"    for(var i = 0; i < treasure.items.length; i++) {\r",
											"        pm.expect(treasure.items[i].name).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].itemType).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].quantity).to.be.at.least(1);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Level 20 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns generated treasure\", function () {\r",
											"    var treasure = pm.response.json();\r",
											"    pm.expect(treasure.isAny).to.be.oneOf([true, false]);\r",
											"    pm.expect(treasure.coin).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.not.be.null;\r",
											"    pm.expect(treasure.items).to.not.be.null;\r",
											"\r",
											"    for(var i = 0; i < treasure.items.length; i++) {\r",
											"        pm.expect(treasure.items[i].name).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].itemType).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].quantity).to.be.at.least(1);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Level 20 Coin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns generated treasure\", function () {\r",
											"    var treasure = pm.response.json();\r",
											"    pm.expect(treasure.isAny).to.be.oneOf([true, false]);\r",
											"    pm.expect(treasure.coin).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.be.empty;\r",
											"    pm.expect(treasure.items).to.not.be.null;\r",
											"    pm.expect(treasure.items).to.be.empty;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "coin"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Level 20 Goods",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns generated treasure\", function () {\r",
											"    var treasure = pm.response.json();\r",
											"    pm.expect(treasure.isAny).to.be.oneOf([true, false]);\r",
											"    pm.expect(treasure.coin).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.not.be.null;\r",
											"    pm.expect(treasure.items).to.not.be.null;\r",
											"    pm.expect(treasure.items).to.be.empty;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "goods"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Level 20 Items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns generated treasure\", function () {\r",
											"    var treasure = pm.response.json();\r",
											"    pm.expect(treasure.isAny).to.be.oneOf([true, false]);\r",
											"    pm.expect(treasure.coin).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.be.empty;\r",
											"    pm.expect(treasure.items).to.not.be.null;\r",
											"\r",
											"    for(var i = 0; i < treasure.items.length; i++) {\r",
											"        pm.expect(treasure.items[i].name).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].itemType).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].quantity).to.be.at.least(1);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "items"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Level 100 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Returns generated treasure\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    var treasure = pm.response.json();\r",
											"    pm.expect(treasure.isAny).to.be.oneOf([true, false]);\r",
											"    pm.expect(treasure.coin).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.not.be.null;\r",
											"    pm.expect(treasure.items).to.not.be.null;\r",
											"\r",
											"    for(var i = 0; i < treasure.items.length; i++) {\r",
											"        pm.expect(treasure.items[i].name).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].itemType).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].quantity).to.be.at.least(1);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "100"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Level 20 Invalid Returns Bad Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "invalid"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Level 0 Treasure Returns Bad Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Level 101 Treasure Returns Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Returns generated treasure\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    var treasure = pm.response.json();\r",
											"    pm.expect(treasure.isAny).to.be.equal(true);\r",
											"    pm.expect(treasure.coin).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.not.be.null;\r",
											"    pm.expect(treasure.items).to.not.be.null;\r",
											"\r",
											"    for(var i = 0; i < treasure.items.length; i++) {\r",
											"        pm.expect(treasure.items[i].name).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].itemType).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].quantity).to.be.at.least(1);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "101"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Validate Item",
					"item": [
						{
							"name": "Alchemical Item",
							"item": [
								{
									"name": "Validate Mundane Alchemical Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Alchemical Item - Antitoxin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=antitoxin",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "antitoxin"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Alchemical Item - Antitoxin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=antitoxin",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "antitoxin"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Alchemical Item - Spyglass",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=spyglass",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "spyglass"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Alchemical Item - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Alchemical Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Alchemical Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Tool",
							"item": [
								{
									"name": "Validate Mundane Tool",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Tool - Spyglass",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=spyglass",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "spyglass"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Tool - Spyglass",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=spyglass",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "spyglass"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Tool - Antitoxin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=antitoxin",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "antitoxin"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Tool - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Tool",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Tool",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Potion",
							"item": [
								{
									"name": "Validate Mundane Potion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Potion - Potion of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Potion - Potion of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Potion - Ring of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=ring%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "ring%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Potion - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Potion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Potion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Ring",
							"item": [
								{
									"name": "Validate Mundane Ring",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Ring - Ring of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=ring%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "ring%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Ring - Ring of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=ring%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "ring%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Ring - Potion of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Ring - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Ring",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Ring",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wondrous Item",
							"item": [
								{
									"name": "Validate Mundane Wondrous Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Wondrous Item - Cloak of Arachnida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=cloak%20of%20arachnida",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "cloak%20of%20arachnida"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Wondrous Item - Cloak of Arachnida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=cloak%20of%20arachnida",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "cloak%20of%20arachnida"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Wondrous Item - Potion of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Wondrous Item - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Wondrous Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Wondrous Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Scroll",
							"item": [
								{
									"name": "Validate Mundane Scroll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Scroll - My Scroll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=my%20scroll",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "my%20scroll"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Scroll - My Scroll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=my%20scroll",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "my%20scroll"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Scroll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Scroll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wand",
							"item": [
								{
									"name": "Validate Mundane Wand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Wand - Wand of Spell",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=wand%20of%20spell",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "wand%20of%20spell"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Wand - Wand of Spell",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=wand%20of%20spell",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "wand%20of%20spell"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Wand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Wand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Rod",
							"item": [
								{
									"name": "Validate Mundane Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Rod - Immovable Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=immovable%20rod",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "immovable%20rod"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Rod - Immovable Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=immovable%20rod",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "immovable%20rod"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Rod - Staff of Size Alteration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=staff%20of%20size%20alteration",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "staff%20of%20size%20alteration"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Rod - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Staff",
							"item": [
								{
									"name": "Validate Mundane Staff",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Staff - Staff of Size Alteration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=staff%20of%20size%20alteration",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "staff%20of%20size%20alteration"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Staff - Immovable Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=immovable%20rod",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "immovable%20rod"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Staff - Staff of Size Alteration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=staff%20of%20size%20alteration",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "staff%20of%20size%20alteration"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Rod - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Staff",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Staff",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Weapon",
							"item": [
								{
									"name": "Validate Omnipotent Weapon",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Weapon",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Weapon - Longsword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Weapon - Breastplate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Weapon - Frost Brand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=frost%20brand",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "frost%20brand"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Weapon - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Weapon",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Weapon - Longsword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Weapon - Breastplate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Weapon - Frost Brand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=frost%20brand",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "frost%20brand"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Weapon - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Armor",
							"item": [
								{
									"name": "Validate Omnipotent Armor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Armor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Armor - Longsword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Armor - Breastplate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Armor - Plate Armor of the Deep",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=plate%20armor%20of%20the%20deep",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "plate%20armor%20of%20the%20deep"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Armor - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Armor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Armor - Longsword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Armor - Breastplate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Armor - Plate Armor of the Deep",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=plate%20armor%20of%20the%20deep",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "plate%20armor%20of%20the%20deep"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Armor - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Validate Mundane Invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										"item",
										":itemType",
										"power",
										":power",
										"validate"
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "mundane"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Mundane Invalid - Longsword",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=longsword",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										"item",
										":itemType",
										"power",
										":power",
										"validate"
									],
									"query": [
										{
											"key": "name",
											"value": "longsword"
										}
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "mundane"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Medium Invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										"item",
										":itemType",
										"power",
										":power",
										"validate"
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "medium"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Medium Invalid - Longsword",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=longsword",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										"item",
										":itemType",
										"power",
										":power",
										"validate"
									],
									"query": [
										{
											"key": "name",
											"value": "longsword"
										}
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "medium"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Generate Item",
					"item": [
						{
							"name": "Alchemical Item",
							"item": [
								{
									"name": "Generate Mundane Alchemical Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Alchemical Item');\r",
													"    pm.expect(item.quantity).to.be.at.least(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Mundane Alchemical Item - Antitoxin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Antitoxin');\r",
													"    pm.expect(item.itemType).to.equal('Alchemical Item');\r",
													"    pm.expect(item.quantity).to.be.at.least(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=antitoxin",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "antitoxin"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Alchemical Item - Antitoxin Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=antitoxin",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "antitoxin"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Alchemical Item - Spyglass Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=spyglass",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "spyglass"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Alchemical Item - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Alchemical Item Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Alchemical Item Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Tool",
							"item": [
								{
									"name": "Generate Mundane Tool",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Tool');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Mundane Tool - Spyglass",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Spyglass');\r",
													"    pm.expect(item.itemType).to.equal('Tool');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=spyglass",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "spyglass"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Tool - Spyglass Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=spyglass",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "spyglass"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Tool - Antitoxin Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=antitoxin",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "antitoxin"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Tool - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Tool Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Tool Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Potion",
							"item": [
								{
									"name": "Mundane Potion Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Potion - Potion of Invisibility Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Potion - Potion of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Potion of Invisibility');\r",
													"    pm.expect(item.itemType).to.equal('Potion');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Potion - Ring of Invisibility Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=ring%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "ring%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Potion - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Potion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Potion');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Potion Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Ring",
							"item": [
								{
									"name": "Mundane Ring Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Ring - Ring of Invisibility Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=ring%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "ring%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Ring - Ring of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Ring of Invisibility');\r",
													"    pm.expect(item.itemType).to.equal('Ring');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=ring%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "ring%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Ring - Potion of Invisibility Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Ring - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Ring",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Ring');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Ring Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wondrous Item",
							"item": [
								{
									"name": "Mundane Wondrous Item Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Wondrous Item - Cloak of Arachnida Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=cloak%20of%20arachnida",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "cloak%20of%20arachnida"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Wondrous Item - Cloak of Arachnida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Cloak of Arachnida');\r",
													"    pm.expect(item.itemType).to.equal('Wondrous Item');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=cloak%20of%20arachnida",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "cloak%20of%20arachnida"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Wondrous Item - Potion of Invisibility Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Wondrous Item - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Wondrous Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Wondrous Item');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Wondrous Item Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Scroll",
							"item": [
								{
									"name": "Mundane Scroll Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Scroll - My Scroll Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=my%20scroll",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "my%20scroll"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Scroll - My Scroll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('my scroll');\r",
													"    pm.expect(item.itemType).to.equal('Scroll');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"    pm.expect(item.contents).to.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=my%20scroll",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "my%20scroll"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Scroll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Scroll');\r",
													"    pm.expect(item.itemType).to.equal('Scroll');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"    pm.expect(item.contents).to.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Scroll Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wand",
							"item": [
								{
									"name": "Mundane Wand Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Wand - Wand of Spell Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=wand%20of%20spell",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "wand%20of%20spell"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Wand - Wand of Spell",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('wand of spell');\r",
													"    pm.expect(item.itemType).to.equal('Wand');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"    pm.expect(item.magic.charges).to.be.at.least(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=wand%20of%20spell",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "wand%20of%20spell"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Wand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Wand');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"    pm.expect(item.magic.charges).to.be.at.least(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Wand Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Rod",
							"item": [
								{
									"name": "Mundane Rod Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Rod - Immovable Rod Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=immovable%20rod",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "immovable%20rod"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Rod - Immovable Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Immovable Rod');\r",
													"    pm.expect(item.itemType).to.equal('Rod');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=immovable%20rod",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "immovable%20rod"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Rod - Staff of Size Alteration Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=staff%20of%20size%20alteration",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "staff%20of%20size%20alteration"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Rod - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Rod');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Rod Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Staff",
							"item": [
								{
									"name": "Mundane Staff Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Staff - Staff of Size Alteration Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=staff%20of%20size%20alteration",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "staff%20of%20size%20alteration"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Staff - Immovable Rod Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=immovable%20rod",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "immovable%20rod"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Staff - Staff of Size Alteration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Staff of Size Alteration');\r",
													"    pm.expect(item.itemType).to.equal('Staff');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=staff%20of%20size%20alteration",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "staff%20of%20size%20alteration"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Rod - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Staff",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Staff');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Staff Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Weapon",
							"item": [
								{
									"name": "Omnipotent Weapon Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Mundane Weapon",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Weapon');\r",
													"    pm.expect(item.quantity).to.be.at.least(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Mundane Weapon - Longsword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Returns item\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Longsword');\r",
													"    pm.expect(item.itemType).to.equal('Weapon');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});\r",
													"pm.test(\"BUG - Returns weapon with weapon properties\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Longsword');\r",
													"    pm.expect(item.itemType).to.equal('Weapon');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"    pm.expect(item.size).not.to.be.undefined;\r",
													"    pm.expect(item.size).not.to.equal('');\r",
													"    pm.expect(item.damageDescription).not.to.equal('');\r",
													"    pm.expect(item.criticalDamageDescription).not.to.equal('');\r",
													"    pm.expect(item.threatRangeDescription).not.to.equal('');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Weapon - Breastplate Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Weapon - Frost Brand Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=frost%20brand",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "frost%20brand"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Weapon - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Weapon",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Weapon');\r",
													"    pm.expect(item.quantity).to.be.at.least(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Weapon - Longsword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    var names = [...item.baseNames];\r",
													"    names.push(item.name);\r",
													"\r",
													"    pm.expect(names).to.include('Longsword');\r",
													"    pm.expect(item.itemType).to.equal('Weapon');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG - Generate Medium Weapon - Sword of the Planes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    var names = [...item.baseNames];\r",
													"    names.push(item.name);\r",
													"\r",
													"    pm.expect(item.name).to.equal('Sword of the Planes');\r",
													"    pm.expect(item.baseNames).to.include('Longsword');\r",
													"    pm.expect(item.itemType).to.equal('Weapon');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=sword%20of%20the%20planes",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "sword%20of%20the%20planes"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Weapon - Breastplate Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Weapon - Frost Brand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Frost Brand');\r",
													"    pm.expect(item.itemType).to.equal('Weapon');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=frost%20brand",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "frost%20brand"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Weapon - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Armor",
							"item": [
								{
									"name": "Omnipotent Armor Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Mundane Armor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Armor');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Armor - Longsword Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Mundane Armor - Breastplate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Returns item\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Breastplate');\r",
													"    pm.expect(item.itemType).to.equal('Armor');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});\r",
													"pm.test(\"BUG - Returns armor with armor properties\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Breastplate');\r",
													"    pm.expect(item.itemType).to.equal('Armor');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"    pm.expect(item.armorBonus).to.equal(5);\r",
													"    pm.expect(item.armorCheckPenalty).to.equal(-4);\r",
													"    pm.expect(item.maxDexterityBonus).to.equal(3);\r",
													"    pm.expect(item.size).not.to.be.undefined;\r",
													"    pm.expect(item.size).not.to.equal('');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Armor - Plate Armor of the Deep Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=plate%20armor%20of%20the%20deep",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "plate%20armor%20of%20the%20deep"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Armor - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Armor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Armor');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Armor - Longsword Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Armor - Breastplate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    var names = [...item.baseNames];\r",
													"    names.push(item.name);\r",
													"\r",
													"    pm.expect(names).to.include('Breastplate');\r",
													"    pm.expect(item.itemType).to.equal('Armor');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Armor - Plate Armor of the Deep",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Plate Armor of the Deep');\r",
													"    pm.expect(item.itemType).to.equal('Armor');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=plate%20armor%20of%20the%20deep",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "plate%20armor%20of%20the%20deep"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Armor - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Mundane Invalid Returns Bad Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										"item",
										":itemType",
										"power",
										":power",
										"generate"
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "mundane"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Mundane Invalid - Longsword Returns Bad Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=longsword",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										"item",
										":itemType",
										"power",
										":power",
										"generate"
									],
									"query": [
										{
											"key": "name",
											"value": "longsword"
										}
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "mundane"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Medium Invalid Returns Bad Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										"item",
										":itemType",
										"power",
										":power",
										"generate"
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "medium"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Medium Invalid - Longsword Returns Bad Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/generate?name=longsword",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v1",
										"item",
										":itemType",
										"power",
										":power",
										"generate"
									],
									"query": [
										{
											"key": "name",
											"value": "longsword"
										}
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "medium"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "V2",
			"item": [
				{
					"name": "Validate Treasure",
					"item": [
						{
							"name": "Validate Level 1 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 20 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 20 Coin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "coin"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 20 Goods",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "goods"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 20 Items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "items"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 20 Invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(false);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": ""
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 0 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(false);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 100 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "100"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Level 101 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    pm.expect(pm.response.json()).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"validate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "101"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Generate Treasure",
					"item": [
						{
							"name": "Generate Level 1 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns generated treasure\", function () {\r",
											"    var treasure = pm.response.json();\r",
											"    pm.expect(treasure.isAny).to.be.oneOf([true, false]);\r",
											"    pm.expect(treasure.coin).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.not.be.null;\r",
											"    pm.expect(treasure.items).to.not.be.null;\r",
											"\r",
											"    for(var i = 0; i < treasure.items.length; i++) {\r",
											"        pm.expect(treasure.items[i].name).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].itemType).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].quantity).to.be.at.least(1);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Level 20 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns generated treasure\", function () {\r",
											"    var treasure = pm.response.json();\r",
											"    pm.expect(treasure.isAny).to.be.oneOf([true, false]);\r",
											"    pm.expect(treasure.coin).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.not.be.null;\r",
											"    pm.expect(treasure.items).to.not.be.null;\r",
											"\r",
											"    for(var i = 0; i < treasure.items.length; i++) {\r",
											"        pm.expect(treasure.items[i].name).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].itemType).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].quantity).to.be.at.least(1);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Level 20 Coin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns generated treasure\", function () {\r",
											"    var treasure = pm.response.json();\r",
											"    pm.expect(treasure.isAny).to.be.oneOf([true, false]);\r",
											"    pm.expect(treasure.coin).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.be.empty;\r",
											"    pm.expect(treasure.items).to.not.be.null;\r",
											"    pm.expect(treasure.items).to.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "coin"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Level 20 Goods",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns generated treasure\", function () {\r",
											"    var treasure = pm.response.json();\r",
											"    pm.expect(treasure.isAny).to.be.oneOf([true, false]);\r",
											"    pm.expect(treasure.coin).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.not.be.null;\r",
											"    pm.expect(treasure.items).to.not.be.null;\r",
											"    pm.expect(treasure.items).to.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "goods"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Level 20 Items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns generated treasure\", function () {\r",
											"    var treasure = pm.response.json();\r",
											"    pm.expect(treasure.isAny).to.be.oneOf([true, false]);\r",
											"    pm.expect(treasure.coin).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.be.empty;\r",
											"    pm.expect(treasure.items).to.not.be.null;\r",
											"\r",
											"    for(var i = 0; i < treasure.items.length; i++) {\r",
											"        pm.expect(treasure.items[i].name).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].itemType).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].quantity).to.be.at.least(1);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "items"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Level 100 Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns generated treasure\", function () {\r",
											"    var treasure = pm.response.json();\r",
											"    pm.expect(treasure.isAny).to.be.oneOf([true, false]);\r",
											"    pm.expect(treasure.coin).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.not.be.null;\r",
											"    pm.expect(treasure.items).to.not.be.null;\r",
											"\r",
											"    for(var i = 0; i < treasure.items.length; i++) {\r",
											"        pm.expect(treasure.items[i].name).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].itemType).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].quantity).to.be.at.least(1);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "100"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Level 20 Invalid Returns Bad Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "invalid"
										},
										{
											"key": "level",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Level 0 Treasure Returns Bad Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Level 101 Treasure Returns Treasure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Returns generated treasure\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    var treasure = pm.response.json();\r",
											"    pm.expect(treasure.isAny).to.be.equal(true);\r",
											"    pm.expect(treasure.coin).to.not.be.null;\r",
											"    pm.expect(treasure.goods).to.not.be.null;\r",
											"    pm.expect(treasure.items).to.not.be.null;\r",
											"\r",
											"    for(var i = 0; i < treasure.items.length; i++) {\r",
											"        pm.expect(treasure.items[i].name).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].itemType).to.not.be.empty;\r",
											"        pm.expect(treasure.items[i].quantity).to.be.at.least(1);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/:treasureType/level/:level/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										":treasureType",
										"level",
										":level",
										"generate"
									],
									"variable": [
										{
											"key": "treasureType",
											"value": "treasure"
										},
										{
											"key": "level",
											"value": "101"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Validate Item",
					"item": [
						{
							"name": "Alchemical Item",
							"item": [
								{
									"name": "Validate Mundane Alchemical Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Alchemical Item - Antitoxin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=antitoxin",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "antitoxin"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Alchemical Item - Antitoxin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=antitoxin",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "antitoxin"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Alchemical Item - Spyglass",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=spyglass",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "spyglass"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Alchemical Item - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Alchemical Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Alchemical Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Tool",
							"item": [
								{
									"name": "Validate Mundane Tool",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Tool - Spyglass",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=spyglass",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "spyglass"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Tool - Spyglass",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=spyglass",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "spyglass"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Tool - Antitoxin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=antitoxin",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "antitoxin"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Tool - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Tool",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Tool",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Potion",
							"item": [
								{
									"name": "Validate Mundane Potion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Potion - Potion of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Potion - Potion of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Potion - Ring of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=ring%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "ring%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Potion - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Potion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Potion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Ring",
							"item": [
								{
									"name": "Validate Mundane Ring",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Ring - Ring of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=ring%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "ring%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Ring - Ring of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=ring%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "ring%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Ring - Potion of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Ring - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Ring",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Ring",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wondrous Item",
							"item": [
								{
									"name": "Validate Mundane Wondrous Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Wondrous Item - Cloak of Arachnida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=cloak%20of%20arachnida",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "cloak%20of%20arachnida"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Wondrous Item - Cloak of Arachnida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=cloak%20of%20arachnida",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "cloak%20of%20arachnida"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Wondrous Item - Potion of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Wondrous Item - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Wondrous Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Wondrous Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Scroll",
							"item": [
								{
									"name": "Validate Mundane Scroll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Scroll - My Scroll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=my%20scroll",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "my%20scroll"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Scroll - My Scroll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=my%20scroll",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "my%20scroll"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Scroll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Scroll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wand",
							"item": [
								{
									"name": "Validate Mundane Wand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Wand - Wand of Spell",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=wand%20of%20spell",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "wand%20of%20spell"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Wand - Wand of Spell",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=wand%20of%20spell",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "wand%20of%20spell"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Wand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Wand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Rod",
							"item": [
								{
									"name": "Validate Mundane Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Rod - Immovable Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=immovable%20rod",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "immovable%20rod"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Rod - Immovable Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=immovable%20rod",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "immovable%20rod"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Rod - Staff of Size Alteration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=staff%20of%20size%20alteration",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "staff%20of%20size%20alteration"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Rod - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Staff",
							"item": [
								{
									"name": "Validate Mundane Staff",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Staff - Staff of Size Alteration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=staff%20of%20size%20alteration",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "staff%20of%20size%20alteration"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Staff - Immovable Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=immovable%20rod",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "immovable%20rod"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Staff - Staff of Size Alteration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=staff%20of%20size%20alteration",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "staff%20of%20size%20alteration"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Rod - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Staff",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Omnipotent Staff",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Weapon",
							"item": [
								{
									"name": "Validate Omnipotent Weapon",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Weapon",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Weapon - Longsword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Weapon - Breastplate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Weapon - Frost Brand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=frost%20brand",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "frost%20brand"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Weapon - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Weapon",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Weapon - Longsword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Weapon - Breastplate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Weapon - Frost Brand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=frost%20brand",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "frost%20brand"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Weapon - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Armor",
							"item": [
								{
									"name": "Validate Omnipotent Armor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Armor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Armor - Longsword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Armor - Breastplate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Armor - Plate Armor of the Deep",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=plate%20armor%20of%20the%20deep",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "plate%20armor%20of%20the%20deep"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Mundane Armor - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Armor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Armor - Longsword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Armor - Breastplate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Armor - Plate Armor of the Deep",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(true);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=plate%20armor%20of%20the%20deep",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "plate%20armor%20of%20the%20deep"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Validate Medium Armor - Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    pm.expect(pm.response.json()).to.equal(false);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"validate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Validate Mundane Invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(false);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										"item",
										":itemType",
										"power",
										":power",
										"validate"
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "mundane"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Mundane Invalid - Longsword",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(false);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=longsword",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										"item",
										":itemType",
										"power",
										":power",
										"validate"
									],
									"query": [
										{
											"key": "name",
											"value": "longsword"
										}
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "mundane"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Medium Invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(false);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										"item",
										":itemType",
										"power",
										":power",
										"validate"
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "medium"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Medium Invalid - Longsword",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returns validity\", function () {\r",
											"    pm.expect(pm.response.json()).to.equal(false);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/validate?name=longsword",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										"item",
										":itemType",
										"power",
										":power",
										"validate"
									],
									"query": [
										{
											"key": "name",
											"value": "longsword"
										}
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "medium"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Generate Item",
					"item": [
						{
							"name": "Alchemical Item",
							"item": [
								{
									"name": "Generate Mundane Alchemical Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Alchemical Item');\r",
													"    pm.expect(item.quantity).to.be.at.least(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Mundane Alchemical Item - Antitoxin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Antitoxin');\r",
													"    pm.expect(item.itemType).to.equal('Alchemical Item');\r",
													"    pm.expect(item.quantity).to.be.at.least(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=antitoxin",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "antitoxin"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Alchemical Item - Antitoxin Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=antitoxin",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "antitoxin"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Alchemical Item - Spyglass Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=spyglass",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "spyglass"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Alchemical Item - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Alchemical Item Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Alchemical Item Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "alchemicalitem"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Tool",
							"item": [
								{
									"name": "Generate Mundane Tool",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Tool');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Mundane Tool - Spyglass",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Spyglass');\r",
													"    pm.expect(item.itemType).to.equal('Tool');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=spyglass",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "spyglass"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Tool - Spyglass Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=spyglass",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "spyglass"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Tool - Antitoxin Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=antitoxin",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "antitoxin"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Tool - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Tool Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Tool Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "tool"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Potion",
							"item": [
								{
									"name": "Mundane Potion Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Potion - Potion of Invisibility Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Potion - Potion of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Potion of Invisibility');\r",
													"    pm.expect(item.itemType).to.equal('Potion');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Potion - Ring of Invisibility Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=ring%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "ring%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Potion - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Potion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Potion');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Potion Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "potion"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Ring",
							"item": [
								{
									"name": "Mundane Ring Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Ring - Ring of Invisibility Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=ring%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "ring%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Ring - Ring of Invisibility",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Ring of Invisibility');\r",
													"    pm.expect(item.itemType).to.equal('Ring');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=ring%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "ring%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Ring - Potion of Invisibility Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Ring - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Ring",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Ring');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Ring Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "ring"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wondrous Item",
							"item": [
								{
									"name": "Mundane Wondrous Item Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Wondrous Item - Cloak of Arachnida Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=cloak%20of%20arachnida",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "cloak%20of%20arachnida"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Wondrous Item - Cloak of Arachnida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Cloak of Arachnida');\r",
													"    pm.expect(item.itemType).to.equal('Wondrous Item');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=cloak%20of%20arachnida",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "cloak%20of%20arachnida"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Wondrous Item - Potion of Invisibility Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=potion%20of%20invisibility",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "potion%20of%20invisibility"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Wondrous Item - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Wondrous Item",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Wondrous Item');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Wondrous Item Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wondrousitem"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Scroll",
							"item": [
								{
									"name": "Mundane Scroll Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Scroll - My Scroll Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=my%20scroll",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "my%20scroll"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Scroll - My Scroll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('my scroll');\r",
													"    pm.expect(item.itemType).to.equal('Scroll');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"    pm.expect(item.contents).to.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=my%20scroll",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "my%20scroll"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Scroll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Scroll');\r",
													"    pm.expect(item.itemType).to.equal('Scroll');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"    pm.expect(item.contents).to.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Scroll Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "scroll"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wand",
							"item": [
								{
									"name": "Mundane Wand Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Wand - Wand of Spell Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=wand%20of%20spell",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "wand%20of%20spell"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Wand - Wand of Spell",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('wand of spell');\r",
													"    pm.expect(item.itemType).to.equal('Wand');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"    pm.expect(item.magic.charges).to.be.at.least(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=wand%20of%20spell",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "wand%20of%20spell"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Wand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Wand');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"    pm.expect(item.magic.charges).to.be.at.least(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Wand Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "wand"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Rod",
							"item": [
								{
									"name": "Mundane Rod Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Rod - Immovable Rod Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=immovable%20rod",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "immovable%20rod"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Rod - Immovable Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Returns item\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Immovable Rod');\r",
													"    pm.expect(item.itemType).to.equal('Rod');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=immovable%20rod",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "immovable%20rod"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Rod - Staff of Size Alteration Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=staff%20of%20size%20alteration",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "staff%20of%20size%20alteration"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Rod - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Rod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Rod');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Rod Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG - Rod of Alertness is also a weapon",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Returns rod and weapon properties\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Rod of Alertness');\r",
													"    pm.expect(item.itemType).to.equal('Rod');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"    pm.expect(item.magic.bonus).to.equal(1);\r",
													"\r",
													"    pm.expect(item.size).not.to.be.undefined;\r",
													"    pm.expect(item.size).not.to.equal('');\r",
													"    pm.expect(item.damageSummary).not.to.equal('');\r",
													"    pm.expect(item.criticalDamageSummary).not.to.equal('');\r",
													"    pm.expect(item.threatRangeSummary).not.to.equal('');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=rod of alertness",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "rod of alertness"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "rod"
												},
												{
													"key": "power",
													"value": "major"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Staff",
							"item": [
								{
									"name": "Mundane Staff Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Staff - Staff of Size Alteration Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=staff%20of%20size%20alteration",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "staff%20of%20size%20alteration"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Staff - Immovable Rod Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=immovable%20rod",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "immovable%20rod"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Staff - Staff of Size Alteration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Staff of Size Alteration');\r",
													"    pm.expect(item.itemType).to.equal('Staff');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=staff%20of%20size%20alteration",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "staff%20of%20size%20alteration"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Rod - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Staff",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns validity\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Staff');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Omnipotent Staff Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "staff"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG - Staff of Power returns staff and weapon",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Returns staff and weapon properties\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Staff of Power');\r",
													"    pm.expect(item.itemType).to.equal('Staff');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"\r",
													"    pm.expect(item.size).not.to.be.undefined;\r",
													"    pm.expect(item.size).not.to.equal('');\r",
													"    pm.expect(item.damageSummary).not.to.equal('');\r",
													"    pm.expect(item.criticalDamageSummary).not.to.equal('');\r",
													"    pm.expect(item.threatRangeSummary).not.to.equal('');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=staff%20of%20power",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "staff%20of%20power"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "Staff"
												},
												{
													"key": "power",
													"value": "Major"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Weapon",
							"item": [
								{
									"name": "Omnipotent Weapon Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Mundane Weapon",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Weapon');\r",
													"    pm.expect(item.quantity).to.be.at.least(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Mundane Weapon - Longsword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Returns item\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Longsword');\r",
													"    pm.expect(item.itemType).to.equal('Weapon');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});\r",
													"pm.test(\"BUG - Returns weapon with weapon properties\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Longsword');\r",
													"    pm.expect(item.itemType).to.equal('Weapon');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"    pm.expect(item.size).not.to.be.undefined;\r",
													"    pm.expect(item.size).not.to.equal('');\r",
													"    pm.expect(item.damageSummary).not.to.equal('');\r",
													"    pm.expect(item.criticalDamageSummary).not.to.equal('');\r",
													"    pm.expect(item.threatRangeSummary).not.to.equal('');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Weapon - Breastplate Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Weapon - Frost Brand Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=frost%20brand",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "frost%20brand"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Weapon - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Weapon",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Weapon');\r",
													"    pm.expect(item.quantity).to.be.at.least(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Weapon - Longsword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    var names = [...item.baseNames];\r",
													"    names.push(item.name);\r",
													"\r",
													"    pm.expect(names).to.include('Longsword');\r",
													"    pm.expect(item.itemType).to.equal('Weapon');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG - Generate Medium Weapon - Sword of the Planes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    var names = [...item.baseNames];\r",
													"    names.push(item.name);\r",
													"\r",
													"    pm.expect(item.name).to.equal('Sword of the Planes');\r",
													"    pm.expect(item.baseNames).to.include('Longsword');\r",
													"    pm.expect(item.itemType).to.equal('Weapon');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=sword%20of%20the%20planes",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "sword%20of%20the%20planes"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Weapon - Breastplate Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Weapon - Frost Brand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Frost Brand');\r",
													"    pm.expect(item.itemType).to.equal('Weapon');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=frost%20brand",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "frost%20brand"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Weapon - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "weapon"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Armor",
							"item": [
								{
									"name": "Omnipotent Armor Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "omnipotent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Mundane Armor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Armor');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Armor - Longsword Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Mundane Armor - Breastplate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Returns item\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Breastplate');\r",
													"    pm.expect(item.itemType).to.equal('Armor');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});\r",
													"pm.test(\"BUG - Returns armor with armor properties\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Breastplate');\r",
													"    pm.expect(item.itemType).to.equal('Armor');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"    pm.expect(item.armorBonus).to.equal(5);\r",
													"    pm.expect(item.armorCheckPenalty).to.equal(-4);\r",
													"    pm.expect(item.maxDexterityBonus).to.equal(3);\r",
													"    pm.expect(item.size).not.to.be.undefined;\r",
													"    pm.expect(item.size).not.to.equal('');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Armor - Plate Armor of the Deep Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=plate%20armor%20of%20the%20deep",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "plate%20armor%20of%20the%20deep"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Mundane Armor - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "mundane"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Armor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.not.be.empty;\r",
													"    pm.expect(item.itemType).to.equal('Armor');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Armor - Longsword Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=longsword",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "longsword"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Armor - Breastplate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    var names = [...item.baseNames];\r",
													"    names.push(item.name);\r",
													"\r",
													"    pm.expect(names).to.include('Breastplate');\r",
													"    pm.expect(item.itemType).to.equal('Armor');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=breastplate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "breastplate"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Medium Armor - Plate Armor of the Deep",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Returns item\", function () {\r",
													"    var item = pm.response.json();\r",
													"    pm.expect(item.name).to.equal('Plate Armor of the Deep');\r",
													"    pm.expect(item.itemType).to.equal('Armor');\r",
													"    pm.expect(item.quantity).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=plate%20armor%20of%20the%20deep",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "plate%20armor%20of%20the%20deep"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Medium Armor - Invalid Returns Bad Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=invalid",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v2",
												"item",
												":itemType",
												"power",
												":power",
												"generate"
											],
											"query": [
												{
													"key": "name",
													"value": "invalid"
												}
											],
											"variable": [
												{
													"key": "itemType",
													"value": "armor"
												},
												{
													"key": "power",
													"value": "medium"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Mundane Invalid Returns Bad Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										"item",
										":itemType",
										"power",
										":power",
										"generate"
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "mundane"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Mundane Invalid - Longsword Returns Bad Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=longsword",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										"item",
										":itemType",
										"power",
										":power",
										"generate"
									],
									"query": [
										{
											"key": "name",
											"value": "longsword"
										}
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "mundane"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Medium Invalid Returns Bad Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										"item",
										":itemType",
										"power",
										":power",
										"generate"
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "medium"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Medium Invalid - Longsword Returns Bad Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/v2/item/:itemType/power/:power/generate?name=longsword",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"v2",
										"item",
										":itemType",
										"power",
										":power",
										"generate"
									],
									"query": [
										{
											"key": "name",
											"value": "longsword"
										}
									],
									"variable": [
										{
											"key": "itemType",
											"value": "invalid"
										},
										{
											"key": "power",
											"value": "medium"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Swagger UI",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Returns Swagger UI\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"<title>OpenAPI Document on Azure Functions - Swagger UI</title>\");\r",
							"    pm.expect(pm.response.text()).to.include('url: \"https://treasure.dndgen.com/api/swagger.json\"');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/swagger/ui",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"swagger",
						"ui"
					]
				}
			},
			"response": []
		},
		{
			"name": "Swagger JSON",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns Swagger data\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    pm.expect(pm.response.text()).to.include('\"host\": \"treasure.dndgen.com\"');\r",
							"    pm.expect(pm.response.text()).to.include('\"basePath\": \"/api\"');\r",
							"\r",
							"    pm.expect(pm.response.text()).to.include(\"/v1/{treasureType}/level/{level}/validate\");\r",
							"    pm.expect(pm.response.text()).to.include(\"/v1/{treasureType}/level/{level}/generate\");\r",
							"    pm.expect(pm.response.text()).to.include(\"/v1/item/{itemType}/power/{power}/validate\");\r",
							"    pm.expect(pm.response.text()).to.include(\"/v1/item/{itemType}/power/{power}/generate\");\r",
							"    \r",
							"    pm.expect(pm.response.text()).to.include(\"/v2/{treasureType}/level/{level}/validate\");\r",
							"    pm.expect(pm.response.text()).to.include(\"/v2/{treasureType}/level/{level}/generate\");\r",
							"    pm.expect(pm.response.text()).to.include(\"/v2/item/{itemType}/power/{power}/validate\");\r",
							"    pm.expect(pm.response.text()).to.include(\"/v2/item/{itemType}/power/{power}/generate\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/swagger.json",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"swagger.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "OpenAPI",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns Open API documentation\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    pm.expect(pm.response.text()).to.include('\"url\": \"https://treasure.dndgen.com/api\"');\r",
							"\r",
							"    pm.expect(pm.response.text()).to.include(\"/v1/{treasureType}/level/{level}/validate\");\r",
							"    pm.expect(pm.response.text()).to.include(\"/v1/{treasureType}/level/{level}/generate\");\r",
							"    pm.expect(pm.response.text()).to.include(\"/v1/item/{itemType}/power/{power}/validate\");\r",
							"    pm.expect(pm.response.text()).to.include(\"/v1/item/{itemType}/power/{power}/generate\");\r",
							"\r",
							"    pm.expect(pm.response.text()).to.include(\"/v2/{treasureType}/level/{level}/validate\");\r",
							"    pm.expect(pm.response.text()).to.include(\"/v2/{treasureType}/level/{level}/generate\");\r",
							"    pm.expect(pm.response.text()).to.include(\"/v2/item/{itemType}/power/{power}/validate\");\r",
							"    pm.expect(pm.response.text()).to.include(\"/v2/item/{itemType}/power/{power}/generate\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/openapi/1.0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"openapi",
						"1.0"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "treasure.dndgen.com",
			"type": "default"
		}
	]
}