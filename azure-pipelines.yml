# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'DnDGen.Web.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
- job: DnDGen_Web
  displayName: DnDGen Website
  steps:
  - checkout: self
    displayName: 'Checkout Code'
    persistCredentials: true
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: 'DnDGen.Web/DnDGen.Web.csproj'
      arguments: '--configuration $(buildConfiguration)'
  - task: DotNetCoreCLI@2
    displayName: Run Server-side Unit Tests
    inputs:
      command: test
      projects: 'DnDGen.Web.Tests.Unit/DnDGen.Web.Tests.Unit.csproj'
      arguments: '-v normal'
  - task: DotNetCoreCLI@2
    displayName: Run Integration Tests
    inputs:
      command: test
      projects: 'DnDGen.Web.Tests.Integration/DnDGen.Web.Tests.Integration.csproj'
      arguments: '-v normal'
  - task: NuGetCommand@2
    displayName: Install Chutzpah
    retryCountOnTaskFailure: 3
    inputs:
      command: custom
      arguments: 'install Chutzpah -OutputDirectory $(System.DefaultWorkingDirectory)/testrunner'
  - task: VSTest@2
    displayName: Run Client-side Unit Tests
    inputs:
      pathtoCustomTestAdapters: '$(System.DefaultWorkingDirectory)/testrunner/'
      testAssemblyVer2: 'DnDGen.Web.Tests.Unit/**/chutzpah.json'
      failOnMinTestsNotRun: true

  - task: DotNetCoreCLI@2
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: Publish Website
    inputs:
      command: publish
      projects: 'DnDGen.Web/DnDGen.Web.csproj'
      publishWebProjects: False
      arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/Website'
      zipAfterPublish: True

  - task: PublishPipelineArtifact@1
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: Publish Artifacts
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/Website' 
      artifactName: 'dndgen-web'
      
# INFO: Currently having an issue where we can't get Azure DevOps to talk to Azure Container Registry.
# Not gonna go down the rabbit hole for now, so I'll move on to other things. Might revisit this at a later time.
# - task: Docker@2
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#   displayName: Build DnDGen.Web container and push to ACR
#   inputs:
#     command: 'buildAndPush'
#     repository: 'dndgenweb'
#     dockerfile: 'DnDGen.Web/Dockerfile'
#     containerRegistry: 'DnDGen - ACR'

- job: RollGen_Api
  displayName: RollGen API
  steps:
  - checkout: self
    displayName: 'Checkout Code'
    persistCredentials: true
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: 'DnDGen.Api.RollGen/DnDGen.Api.RollGen.csproj'
      arguments: '--configuration $(buildConfiguration)'
  - task: DotNetCoreCLI@2
    displayName: Run Unit Tests
    inputs:
      command: test
      projects: 'DnDGen.Api.RollGen.Tests.Unit/DnDGen.Api.RollGen.Tests.Unit.csproj'
      arguments: '-v normal'
  - task: DotNetCoreCLI@2
    displayName: Run Integration Tests
    inputs:
      command: test
      projects: 'DnDGen.Api.RollGen.Tests.Integration/DnDGen.Api.RollGen.Tests.Integration.csproj'
      arguments: '-v normal'
  - task: DotNetCoreCLI@2
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: 'Publish Artifacts'
    inputs:
      command: 'publish'
      projects: 'DnDGen.Api.RollGen/DnDGen.Api.RollGen.csproj'
      publishWebProjects: false
      arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/Api/RollGen'
      zipAfterPublish: true

  - task: PublishPipelineArtifact@1
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: Publish Artifacts
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/Api/RollGen' 
      artifactName: 'rollgen-api'
