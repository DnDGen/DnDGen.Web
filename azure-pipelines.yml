# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'DnDGen.Web.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- checkout: self
  displayName: 'Checkout Code'
  persistCredentials: true
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: 'DnDGen.Web/DnDGen.Web.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: Server-side Unit Tests
  inputs:
    command: test
    projects: 'DnDGen.Web.Tests.Unit/DnDGen.Web.Tests.Unit.csproj'
    arguments: '-v normal'
- task: DotNetCoreCLI@2
  displayName: Integration Tests
  inputs:
    command: test
    projects: 'DnDGen.Web.Tests.Integration/DnDGen.Web.Tests.Integration.csproj'
    arguments: '-v normal'
- task: NuGetCommand@2
  displayName: Install Chutzpah
  inputs:
    command: custom
    arguments: 'install Chutzpah -OutputDirectory $(System.DefaultWorkingDirectory)/testrunner'
- task: DotNetCoreCLI@2
  displayName: Client-side Unit Tests (CLI)
  inputs:
    command: test
    arguments: '$(System.DefaultWorkingDirectory)/testrunner/Chutzpah.*/tools/chutzpah.console.exe DnDGen.Web.Tests.Unit/Scripts'
- task: VSTest@2
  displayName: Client-side Unit Tests
  inputs:
    #This "passes", but doesn't find any tests
    # testAssemblyVer2: './DnDGen.Web.Tests.Unit/**/chutzpah.json'
    # searchFolder: './DnDGen.Web.Tests.Unit/Scripts'
    # failOnMinTestsNotRun: true

    # https://stackoverflow.com/questions/53207656/chutzpah-jasmine-tests-in-azure-devops-build-pipeline-returning-failed-when-all
    # testSelector: 'testAssemblies'
    # testAssemblyVer2: '**/chutzpah.json'
    # searchFolder: '$(System.DefaultWorkingDirectory)'
    # vstestLocationMethod: 'version'
    # vsTestVersion: 'latest'
    # diagnosticsEnabled: true
    # distributionBatchType: 'basedOnTestCases'
    # failOnMinTestsNotRun: true

    # https://stackoverflow.com/questions/53532218/how-to-get-a-chutzpah-test-adapter-to-run-my-qunit-tests-on-an-azure-devops-pipe
    testAssemblyVer2: '$(Build.SourcesDirectory)/DnDGen.Web.Tests.Unit/Scripts/app/*.tests.js'
    pathtoCustomTestAdapters: '$(Build.SourcesDirectory)/packages/Chutzpah.4.4.13/tools/'
    failOnMinTestsNotRun: true

    # testAssemblyVer2: './DnDGen.Web.Tests.Unit/Scripts/app/*.tests.js'
    # pathtoCustomTestAdapters: './DnDGen.Web.Tests.Unit/**/Chutzpah.*/tools/'

    # testAssemblyVer2: 'DnDGen.Web.Tests.Unit/**/chutzpah.json'
    # searchFolder: 'DnDGen.Web.Tests.Unit/Scripts'
    # pathtoCustomTestAdapters: '$(Build.SourcesDirectory)/packages/'

- task: PublishBuildArtifacts@1
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: Publish Artifacts
  inputs:
    pathtoPublish: './DnDGen.Web' 
    artifactName: 'dndgen-web'